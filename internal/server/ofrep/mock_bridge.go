// Code generated by mockery v2.43.0. DO NOT EDIT.

package ofrep

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockBridge is an autogenerated mock type for the Bridge type
type MockBridge struct {
	mock.Mock
}

// OFREPFlagEvaluation provides a mock function with given fields: ctx, input
func (_m *MockBridge) OFREPFlagEvaluation(ctx context.Context, input EvaluationBridgeInput) (EvaluationBridgeOutput, error) {
	ret := _m.Called(ctx, input)

	if len(ret) == 0 {
		panic("no return value specified for OFREPFlagEvaluation")
	}

	var r0 EvaluationBridgeOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, EvaluationBridgeInput) (EvaluationBridgeOutput, error)); ok {
		return rf(ctx, input)
	}
	if rf, ok := ret.Get(0).(func(context.Context, EvaluationBridgeInput) EvaluationBridgeOutput); ok {
		r0 = rf(ctx, input)
	} else {
		r0 = ret.Get(0).(EvaluationBridgeOutput)
	}

	if rf, ok := ret.Get(1).(func(context.Context, EvaluationBridgeInput) error); ok {
		r1 = rf(ctx, input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockBridge creates a new instance of MockBridge. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockBridge(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockBridge {
	mock := &MockBridge{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
